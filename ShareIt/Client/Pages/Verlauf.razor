@page "/verlauf"
@using Microsoft.AspNetCore.Components.Authorization
@using ShareIt.Shared
@using System.Net.Http.Json
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3 class="center-heading">Meine Verläufe</h3>


@if (foodItems != null && foodItems.Any())
{
    <div class="food-items-container">
        @foreach (var foodItem in foodItems)
        {
            <div class="food-item-container" @onclick="() => ShowFoodItemDetails(foodItem.Id)">
                <div class="food-item-header">
                    <h4 class="food-item-title">@foodItem.Name</h4>
                    <div class="food-item-meta">
                        <p class="food-item-price">Preis: @foodItem.Price €</p>
                        <p class="food-item-category">Kategorie: @foodItem.Category</p>
                    </div>
                </div>

                <p class="food-item-description">Beschreibung: @foodItem.Description</p>
                <div class="uploaded-by">
                    <span>Dieser Artikel wurde von </span>
                    <span class="username">@foodItem.UserName</span>
                    <span> hochgeladen</span>
                </div>
                <div class="view-count">
                    <span><i class="fas fa-eye"></i> Aufrufe: </span>
                    <span class="count">@foodItem.Views</span>
                </div>
                <div class="food-item-image-container">
                    @if (IsValidUrl(foodItem.ImageUrl))
                    {
                        <img class="food-item-image" src="@foodItem.ImageUrl" alt="Bild" />
                    }
                    else
                    {
                        //In aktuellem Code, nicht zwingend relevant, ggf. über Upload im Swagger. In alter Version erfolgte Bild Upload durch Eingabe von URL, war keine Hinterlegt kam dieses Standardbild.
                        <img class="food-item-image" src="https://i.ibb.co/nLNpg7H/blank-profile-picture-gb0d3bbf79-1280.png" alt="Bild" />
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="center-message">Es wurden keine Artikel in Ihrem Verlauf gefunden.</p>
}

@*
    CSS für das Design der Verlauf-Seite
*@
<style>
    .center-heading {
        text-align: center;
        width: 100%;
        margin: 0 auto 20px auto;
    }

    .center-message {
        text-align: center;
        width: 100%;
        margin-top: 20px;
        color: #555;
        font-size: 16px;
    }

    
    .food-items-container {
        display: flex;
        justify-content: center; 
        flex-wrap: wrap; 
        gap: 20px;
    }



    .food-item-container {
        border: 1px solid #ccc;
        padding: 10px;
        width: 300px; 
        box-sizing: border-box;
        transition: box-shadow 0.3s ease;
        display: flex;
        flex-direction: column;
        align-items: start;
    }

    .food-item-container:hover {
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    }

    .food-item-image-container {
        height: 200px;
        width: 100%;
        display: flex;
        align-items: center; 
        justify-content: center; 
        overflow: hidden;
        text-align: center;
    }

    .food-item-image {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain; 
    }

    .food-item-details {
        padding: 10px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .food-item-header {
        display: flex;
        flex-direction: column;
        margin-bottom: 10px;
    }

    .food-item-title {
        color: #333;
        font-size: 18px;
        font-weight: bold;
        margin: 0;
    }

    .food-item-meta {
        display: flex;
        flex-direction: column;
        font-size: 14px;
        color: #888;
        margin-top: 5px;
    }



    .food-item-price {
        margin: 0; 
    }

    .food-item-category {
        margin: 0;
    }

    .food-item-description {
        color: #555;
        font-size: 14px;
        margin: 0;
        text-align: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }


    .uploaded-by {
        font-size: 12px;
        color: #888;
        margin-top: 5px;
        text-align: left;
    }

    .username {
        color: blue;
    }

    .view-count {
        font-size: 12px;
        color: #888;
        margin-top: 5px;
        text-align: left;
    }

        .view-count span {
            display: inline-block;
        }

    .count {
        color: #333;
        font-weight: bold;
        background-color: #f5f5f5;
        padding: 3px 5px;
        border-radius: 5px;
    }

</style>

@*
    Methoden für die Frontend-Logik 
*@
@code {
    private List<FoodItemModelWithId> foodItems;

    protected override async Task OnInitializedAsync()
    {
        await LoadFoodItemsByUser();
    }

    private async Task LoadFoodItemsByUser()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var userName = user.Identity?.Name;

            foodItems = await httpClient.GetFromJsonAsync<List<FoodItemModelWithId>>($"api/FoodItems/user/{userName}");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Fehler beim Laden der Artikel: " + ex.Message);
        }
    }

    private void ShowFoodItemDetails(int foodItemId)
    {
        navigationManager.NavigateTo($"/objectViewHistory/{foodItemId}");
    }

    private bool IsValidUrl(string url)
    {
        return Uri.IsWellFormedUriString(url, UriKind.Absolute);
    }
}
